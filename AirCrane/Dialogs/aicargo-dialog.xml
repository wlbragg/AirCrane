<?xml version="1.0"?>

<PropertyList>
	<name>aicargo-dialog</name>
	<layout>vbox</layout>
	<resizable>true</resizable>
	<default-padding>3</default-padding>

	<group>
		<layout>hbox</layout>
		<default-padding>1</default-padding>
		<empty><stretch>true</stretch></empty>
		<text>
			<label>Cargo Positioning</label>
		</text>
		<empty><stretch>true</stretch></empty>
		<button>
			<legend></legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<border>2</border>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
	</group>

	<hrule/>

	<nasal>
		<open><![CDATA[

        var dlgRoot = cmdarg();
        var DIALOG_ROOT  = "/sim/gui/dialogs/aicargo-dialog";

        # Fill in the cargo names
        var cargo = props.globals.getNode("/models/cargo", 1).getChildren("cargo");

        #var cgselect = gui.findElementByName(dlgRoot, "cgselect");
        #forindex (var cargo_index; cargo) {
        #  var cg = cargo[cargo_index];
        #  var cg_id = "unknown";
        #  if (string.match(cg.getNode("callsign").getValue(), "cargo*")){
        #    if ((cg.getNode("callsign") != nil) and (cg.getNode("callsign").getValue() != nil)) {
        #      cg_id = cg.getNode("callsign").getValue();
        #    }
        #    cgselect.getNode("value[" ~ cargo_index ~ "]", 1).setValue(cg_id);
        #  }
        #}

        var list = gui.findElementByName(dlgRoot, "list");
        forindex (var cargo_index; cargo) {
          var cg = cargo[cargo_index];
          var cg_id = "unknown";
          if (string.match(cg.getNode("callsign").getValue(), "cargo*")){
            if ((cg.getNode("callsign") != nil) and (cg.getNode("callsign").getValue() != nil)) {
              cg_id = cg.getNode("callsign").getValue() ~
                " " ~ cg.getNode("description").getValue() ~
                " " ~ cg.getNode("weight").getValue() ~
                " " ~ cg.getNode("height").getValue() ~
                " " ~ cg.getNode("stack").getValue();

            }
            list.getNode("value[" ~ cargo_index ~ "]", 1).setValue(cg_id);
          }
        }

		]]></open>
		<close><![CDATA[
		]]></close>
	</nasal>

	<group>
		<layout>hbox</layout>
		<default-padding>1</default-padding>
		<empty><stretch>true</stretch></empty>
        <checkbox>
            <halign>left</halign>
            <label>Ranging On/Off</label>
            <property>/sim/gui/show-range</property>
            <binding>
                <command>property-toggle</command>
                <property>/sim/gui/show-range</property>
            </binding>
        </checkbox>
	</group>

	<hrule/>

	<text>
	  <halign>left</halign>
	  <label>  To process cargo:</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    1) Select the cargo you wish to process from the drop-down.</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    2) Shift+left-click on ground to position cargo or</label>
  </text>
  <text>
	  <halign>left</halign>
    <label>        check "Random" to randomly position cargo behind the aircraft.</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    3) Check "Persistant" to make position persistant.</label>
  </text>
  <text>
	  <halign>left</halign>
	  <label>    4) Click "Reset" to hide cargo.</label>
  </text>

  <hrule/>

	<!-- Cargo selector -->
	<group>
	  <layout>table</layout>
    <checkbox>
      <col>2</col>
      <row>0</row>
      <halign>right</halign>
      <label>Persistent</label>
      <property>/sim/gui/dialogs/aicargo-dialog/save</property>
      <live>true</live>
      <binding>
        <command>property-toggle</command>
        <property>/sim/gui/dialogs/aicargo-dialog/save</property>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/gui/dialogs/aicargo-dialog/save") == 1) {
            setprop("/sim/model/aircrane/"~cargo~"/saved", 1);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/position/latitude-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat"));
            setprop("/sim/model/aircrane/"~cargo~"/position/longitude-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon"));
            setprop("/sim/model/aircrane/"~cargo~"/position/altitude-ft", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt"));
            setprop("/sim/model/aircrane/"~cargo~"/orientation/true-heading-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head"));
            setprop("/sim/model/aircrane/"~cargo~"/stack", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_stack"));
          } else
              setprop("/sim/model/aircrane/"~cargo~"/saved", 0);

          aircraft.data.add("/sim/model/aircrane/"~cargo~"/position/latitude-deg",
            "/sim/model/aircrane/"~cargo~"/position/longitude-deg",
            "/sim/model/aircrane/"~cargo~"/position/altitude-ft",
            "/sim/model/aircrane/"~cargo~"/orientation/true-heading-deg",
            "/sim/model/aircrane/"~cargo~"/saved",
            "/sim/model/aircrane/"~cargo~"/random",
            "/sim/model/aircrane/"~cargo~"/stack");
          aircraft.data.save();
        </script>
      </binding>
    </checkbox>
    <checkbox>
      <col>3</col>
      <row>0</row>
      <halign>right</halign>
      <label>Random</label>
      <property>/sim/gui/dialogs/aicargo-dialog/random</property>
      <live>true</live>
      <binding>
        <command>property-toggle</command>
        <property>/sim/gui/dialogs/aicargo-dialog/random</property>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/gui/dialogs/aicargo-dialog/random") == 1) {
            var aic = getprop("/sim/gui/dialogs/aicargo-dialog/ai-path");
            
            setprop("/sim/model/aircrane/"~cargo~"/random", 1);
            setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);

            var heading = getprop("orientation/heading-deg")+90;
            var x = math.cos(heading*0.0174533);
            var y = math.sin(heading*0.0174533);
            var factor = .001 + rand() * .001;
            y = y * -1;
            x = x * factor;
            y = y * factor;

            setprop("/models/cargo/"~aic~"/latitude-deg", getprop("position/latitude-deg")+y);
            setprop("/models/cargo/"~aic~"/longitude-deg", getprop("position/longitude-deg")+x);
            setprop("/models/cargo/"~aic~"/heading-deg", rand()*360);
            var elev_m = geo.elevation(getprop("/models/cargo/"~aic~"/latitude-deg"), getprop("/models/cargo/"~aic~"/longitude-deg"));
            var alt_offset = getprop("/models/cargo/"~aic~"/elev-offset");
            setprop("/models/cargo/"~aic~"/elevation-ft", elev_m * 3.2808 + alt_offset);

            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat", getprop("/models/cargo/"~aic~"/latitude-deg"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon", getprop("/models/cargo/"~aic~"/longitude-deg"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt", getprop("/models/cargo/"~aic~"/elevation-ft"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head",getprop("/models/cargo/"~aic~"/heading-deg"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_desc",getprop("/models/cargo/"~aic~"/description"));
          }

          aircraft.data.add("/sim/model/aircrane/"~cargo~"/saved",
            "/sim/model/aircrane/"~cargo~"/random");
          aircraft.data.save();

          #fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          #fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </checkbox>
    <text>
      <col>0</col>
      <row>1</row>
	    <halign>left</halign>
	    <label>Cargo</label>
    </text>
    <text>
      <col>1</col>
      <row>1</row>
      <halign>left</halign>
      <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_desc</property>
      <format>%s</format>
      <live>true</live>
      <color>
        <red>0.9</red>
        <green>0.4</green>
        <blue>0.2</blue>
        <alpha>1</alpha>
      </color>
    </text>
  </group>

  <group>
	  <layout>hbox</layout>
	  <halign>left</halign>
    <!--combo>
      <name>cgselect</name>
      <halign>left</halign>
      <property>/sim/gui/dialogs/aicargo-dialog/selected-cargo</property>
      <pref-width>350</pref-width>
      <binding>
        <command>dialog-apply</command>
        <object-name>cgselect</object-name>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var aic_id = "none";
          var cargo = props.globals.getNode( "/models/cargo", 1 ).getChildren( "cargo" );
          var cargo_choice = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          forindex (var cargo_index; cargo) {
            var cg = cargo[cargo_index];
            if (string.match(cg.getNode("callsign").getValue(), cargo_choice)){
              aic_id = cg.getNode("callsign").getParent().getName() ~ "[" ~ cg.getNode("callsign").getParent().getIndex() ~ "]";
              setprop("/sim/gui/dialogs/aicargo-dialog/ai-path", aic_id);
            }
          }

          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat",  getprop("/models/cargo/"~aic_id~"/latitude-deg"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon",  getprop("/models/cargo/"~aic_id~"/longitude-deg"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  getprop("/models/cargo/"~aic_id~"/elevation-ft"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head", getprop("/models/cargo/"~aic_id~"/heading-deg"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_desc", getprop("/models/cargo/"~aic_id~"/description"));

          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/model/aircrane/"~cargo~"/saved") == 1) {
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 1);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
          } else
            if (getprop("/sim/model/aircrane/"~cargo~"/random") == 1) {
              setprop("/sim/gui/dialogs/aicargo-dialog/random", 1);
              setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
              setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            } else {
              setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
              setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
              setprop("/sim/model/aircrane/"~cargo~"/random", 0);
            }

          fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </combo-->
    <button>
      <legend>Reset</legend>
      <default>true</default>
      <binding>
        <command>property-assign</command>
        <property>/sim/gui/dialogs/aicargo-dialog/reset</property>
        <value>1</value>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var reset_cargo = getprop("/sim/gui/dialogs/aicargo-dialog/reset");
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          var aic = getprop("/sim/gui/dialogs/aicargo-dialog/ai-path");
          if (reset_cargo){
            setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            setprop("/models/cargo/"~aic~"/elevation-ft", -1000);
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  0);
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
          }
          setprop("/sim/gui/dialogs/aicargo-dialog/reset", 0);
          #fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          #fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </button>
  </group>

  <group>
        <layout>hbox</layout>
        <halign>left</halign>
        <default-padding>0</default-padding>

        <list>
            <name>list</name>
            <pref-width>360</pref-width>
            <pref-height>260</pref-height>
            <halign>fill</halign>
            <valign>fill</valign>
            <stretch>true</stretch>
            <property>/sim/gui/dialogs/cargo/list</property>
            <binding>
                <command>dialog-apply</command>
                <object-name>list</object-name>
            </binding>
            <!--binding>
                <command>nasal</command>
                <script>listbox()</script>
            </binding-->
            <binding>
                <command>nasal</command>
                <script>
                    var cargoparams = split(" ", getprop("/sim/gui/dialogs/cargo/list"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo", cargoparams[0]);
                    var cargo = string.trim(cargoparams[0], -1, string.isalpha)-1;
                    var aic_id = "none";
                    var cargoa = props.globals.getNode( "/models/cargo", 1 ).getChildren( "cargo" );
                    var cargo_choice = cargoparams[0];
                    forindex (var cargo_index; cargoa) {
                        var cg = cargoa[cargo_index];
                        if (string.match(cg.getNode("callsign").getValue(), cargo_choice)){
                          aic_id = cg.getNode("callsign").getParent().getName() ~ "[" ~ cg.getNode("callsign").getParent().getIndex() ~ "]";
                          setprop("/sim/gui/dialogs/aicargo-dialog/ai-path", aic_id);
                        }
                    }
                    print("Cargo=" ~ cargo ~ "  " ~ cargoparams[0]);
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat",  getprop("/models/cargo/cargo["~cargo~"]/latitude-deg"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon",  getprop("/models/cargo/cargo["~cargo~"]/longitude-deg"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  getprop("/models/cargo/cargo["~cargo~"]/elevation-ft"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head", getprop("/models/cargo/cargo["~cargo~"]/heading-deg"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_desc", getprop("/models/cargo/cargo["~cargo~"]/description"));
                    setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_stack",getprop("/models/cargo/cargo["~cargo~"]/stack"));

                    if (getprop("/sim/model/aircrane/"~cargoparams[0]~"/saved") == 1) {
                        setprop("/sim/gui/dialogs/aicargo-dialog/save", 1);
                        setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
                        setprop("/sim/model/aircrane/"~cargoparams[0]~"/random", 0);
                    } else
                        if (getprop("/sim/model/aircrane/"~cargoparams[0]~"/random") == 1) {
                          setprop("/sim/gui/dialogs/aicargo-dialog/random", 1);
                          setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
                          setprop("/sim/model/aircrane/"~cargoparams[0]~"/saved", 0);
                        } else {
                          setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
                          setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
                          setprop("/sim/model/aircrane/"~cargoparams[0]~"/random", 0);
                        }

                    #var cargoa = split(" ",string.trim(getprop("/sim/gui/dialogs/cargo/list"), -1, string.isalpha));
                    #var cargo=cargoa[0]-1;
                </script>
            </binding>
        </list>
  </group>

  <group>
    <layout>hbox</layout>
    <valign>top</valign>
    <halign>fill</halign>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Model Object:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/ai-path</property>
        <format>%s</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Latitude:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
      <halign>left</halign>
      <label>Longitude:</label>
      <enable>
        <not>
          <property>/sim/rendering/rembrandt/enabled</property>
        </not>
      </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Altitude:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Heading:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_head</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
  </group>

  <hrule/>

  <!-- Button bar -->
  <group>
    <layout>hbox</layout>
    <empty>
      <stretch>true</stretch>
    </empty>
    <button>
      <legend>Close</legend>
      <binding>
        <command>dialog-close</command>
      </binding>
    </button>
    <empty>
      <stretch>true</stretch>
    </empty>
  </group>  
</PropertyList>
