<?xml version="1.0"?>

<PropertyList>
	<nasal>
		<open><![CDATA[
		
      var dlgRoot = cmdarg();
      #var DIALOG_ROOT  = "/sim/gui/dialogs/aicargo-dialog";

      # Fill in the cargo names combo box.
      var cargo = props.globals.getNode("/ai/models", 1).getChildren("aircraft");

      #if (size(cargo) == 0) {
      #  # No cargo found - no point filling in rest of dialog
      #  gui.popupTip("No Cargo Exists", 1);  
      #} else {
        var cgselect = gui.findElementByName(dlgRoot, "cgselect");

        forindex (var cargo_index; cargo) {   
          var cg = cargo[cargo_index];
          var cg_id = "unknown";
          if (string.match(cg.getNode("callsign").getValue(), "cargo*")){
            if ((cg.getNode("callsign") != nil) and (cg.getNode("callsign").getValue() != nil))
            {
              cg_id = cg.getNode("callsign").getValue();
            }
            cgselect.getNode("value[" ~ cargo_index ~ "]", 1).setValue(cg_id);
          }
        }
      #}

      #var aic_id = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
      #if (getprop("/sim/model/aircrane/"~cargo~"/saved") == 1) {
      #      setprop("/sim/gui/dialogs/aicargo-dialog/save", 1);
      #      setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
      #      setprop("/sim/model/aircrane/"~cargo~"/random", 0);
      #    } else
      #      if (getprop("/sim/model/aircrane/"~cargo~"/random") == 1) {
      #        setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
      #        setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
      #        setprop("/sim/gui/dialogs/aicargo-dialog/random", 1);
      #      } else {
      #        setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
      #        setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
      #        setprop("/sim/model/aircrane/"~cargo~"/random", 0);
      #      }
      #setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat",  getprop("/ai/models/"~aic_id~"/position/latitude-deg"));
      #setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon",  getprop("/ai/models/"~aic_id~"/position/longitude-deg"));
      #setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  getprop("/ai/models/"~aic_id~"/position/altitude-ft"));
      #setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head", getprop("/ai/models/"~aic_id~"/orientation/true-heading-deg"));

		]]></open>
		<close><![CDATA[		
		]]></close>
	</nasal>

	<name>aicargo-dialog</name>
	<layout>vbox</layout>
	<resizable>true</resizable>
	<default-padding>3</default-padding>

	<group>
		<layout>hbox</layout>
		<default-padding>1</default-padding>
		<empty><stretch>true</stretch></empty>
		<text>
			<label>Cargo Positioning</label>
		</text>
		<empty><stretch>true</stretch></empty>
		<button>
			<legend></legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<border>2</border>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
	</group>

	<hrule/>

	<text>
	  <halign>left</halign>
	  <label>  To process cargo:</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    1) Select the cargo you wish to process from the drop-down.</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    2) Shift+left-click on ground to position cargo.</label>
  </text>
	<text>
	  <halign>left</halign>
	  <label>    3) Check "Persistant" to make position persistant.</label>
  </text>
  <text>
	  <halign>left</halign>
	  <label>    4) Check "Random" to randomly position cargo behind the aircraft.</label>
  </text>
  <text>
	  <halign>left</halign>
	  <label>    5) Click "Reset" to hide cargo.</label>
  </text>

  <hrule/>

	<!-- Cargo selector -->
	<group>
	  <layout>table</layout>
	  <text>
      <col>0</col>
      <row>0</row>
	    <halign>left</halign>
	    <label>Cargo</label>
    </text>
    <checkbox>
      <col>1</col>
      <row>0</row>
      <halign>left</halign>
      <label>Persistent</label>
      <property>/sim/gui/dialogs/aicargo-dialog/save</property>
      <live>true</live>
      <binding>
        <command>property-toggle</command>
        <property>/sim/gui/dialogs/aicargo-dialog/save</property>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/gui/dialogs/aicargo-dialog/save") == 1) {
            
            setprop("/sim/model/aircrane/"~cargo~"/saved", 1);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/position/latitude-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat"));
            setprop("/sim/model/aircrane/"~cargo~"/position/longitude-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon"));
            setprop("/sim/model/aircrane/"~cargo~"/position/altitude-ft", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt"));
            setprop("/sim/model/aircrane/"~cargo~"/orientation/true-heading-deg", getprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head"));

          } else
              setprop("/sim/model/aircrane/"~cargo~"/saved", 0);

          aircraft.data.add("/sim/model/aircrane/"~cargo~"/position/latitude-deg",
            "/sim/model/aircrane/"~cargo~"/position/longitude-deg",
            "/sim/model/aircrane/"~cargo~"/position/altitude-ft",
            "/sim/model/aircrane/"~cargo~"/orientation/true-heading-deg",
            "/sim/model/aircrane/"~cargo~"/saved",
            "/sim/model/aircrane/"~cargo~"/random");
          aircraft.data.save();

          fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </checkbox>
    <checkbox>
      <col>2</col>
      <row>0</row>
      <halign>right</halign>
      <label>Random</label>
      <property>/sim/gui/dialogs/aicargo-dialog/random</property>
      <live>true</live>
      <binding>
        <command>property-toggle</command>
        <property>/sim/gui/dialogs/aicargo-dialog/random</property>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/gui/dialogs/aicargo-dialog/random") == 1) {
            var aic = getprop("/sim/gui/dialogs/aicargo-dialog/ai-path");
            
            setprop("/sim/model/aircrane/"~cargo~"/random", 1);
            setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);

        	  var heading = getprop("orientation/heading-deg")+90;
		        var x = math.cos(heading*0.0174533);
		        var y = math.sin(heading*0.0174533);
            var factor = .001 + rand() * .001;
		        y = y * -1;
		        x = x * factor;
		        y = y * factor;

            setprop("/ai/models/"~aic~"/position/latitude-deg", getprop("position/latitude-deg")+y);
            setprop("/ai/models/"~aic~"/position/longitude-deg", getprop("position/longitude-deg")+x);
		        setprop("/ai/models/"~aic~"/orientation/true-heading-deg", rand()*360);
		        var elev_m = geo.elevation(getprop("/ai/models/"~aic~"/position/latitude-deg"), getprop("/ai/models/"~aic~"/position/longitude-deg"));
            setprop("/ai/models/"~aic~"/position/altitude-ft", elev_m * 3.2808);

            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat", getprop("/ai/models/"~aic~"/position/latitude-deg"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon", getprop("/ai/models/"~aic~"/position/longitude-deg"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt", getprop("/ai/models/"~aic~"/position/altitude-ft"));
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head",getprop("/ai/models/"~aic~"/orientation/true-heading-deg"));
          }

          aircraft.data.add("/sim/model/aircrane/"~cargo~"/saved",
            "/sim/model/aircrane/"~cargo~"/random");
          aircraft.data.save();

          fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </checkbox>

  </group>

  <group>
	  <layout>hbox</layout>
	  <halign>left</halign>
    <combo>
      <name>cgselect</name>
      <halign>left</halign>
      <property>/sim/gui/dialogs/aicargo-dialog/selected-cargo</property>
      <pref-width>350</pref-width>
      <binding>
        <command>dialog-apply</command>
        <object-name>cgselect</object-name>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var aic_id = "none";
          var cargo = props.globals.getNode( "/ai/models", 1 ).getChildren( "aircraft" );
          var cargo_choice = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          forindex (var cargo_index; cargo) {
            var cg = cargo[cargo_index];
            if (string.match(cg.getNode("callsign").getValue(), cargo_choice)){
              aic_id = cg.getNode("callsign").getParent().getName() ~ "[" ~ cg.getNode("callsign").getParent().getIndex() ~ "]";
              setprop("/sim/gui/dialogs/aicargo-dialog/ai-path", aic_id);
            }
          }
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat",  getprop("/ai/models/"~aic_id~"/position/latitude-deg"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon",  getprop("/ai/models/"~aic_id~"/position/longitude-deg"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  getprop("/ai/models/"~aic_id~"/position/altitude-ft"));
          setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_head", getprop("/ai/models/"~aic_id~"/orientation/true-heading-deg"));

          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          if (getprop("/sim/model/aircrane/"~cargo~"/saved") == 1) {
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 1);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
          } else
            if (getprop("/sim/model/aircrane/"~cargo~"/random") == 1) {
              setprop("/sim/gui/dialogs/aicargo-dialog/random", 1);
              setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
              setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            } else {
              setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
              setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
              setprop("/sim/model/aircrane/"~cargo~"/random", 0);
            }

          fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </combo>
    <button>
      <legend>Reset</legend>
      <default>true</default>
      <binding>
        <command>property-assign</command>
        <property>/sim/gui/dialogs/aicargo-dialog/reset</property>
        <value>1</value>
      </binding>
      <binding>
        <command>nasal</command>
        <script>
          var reset_cargo = getprop("/sim/gui/dialogs/aicargo-dialog/reset");
          var cargo = getprop("/sim/gui/dialogs/aicargo-dialog/selected-cargo");
          var aic = getprop("/sim/gui/dialogs/aicargo-dialog/ai-path");
          if (reset_cargo){
            setprop("/sim/model/aircrane/"~cargo~"/saved", 0);
            setprop("/ai/models/"~aic~"/position/altitude-ft", -1000);
            setprop("/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt",  0);
            setprop("/sim/gui/dialogs/aicargo-dialog/save", 0);
            setprop("/sim/gui/dialogs/aicargo-dialog/random", 0);
            setprop("/sim/model/aircrane/"~cargo~"/random", 0);
          }
          setprop("/sim/gui/dialogs/aicargo-dialog/reset", 0);
          fgcommand("dialog-close", props.Node.new({"dialog-name": "aicargo-dialog"}));
          fgcommand("dialog-show", props.Node.new({"dialog-name": "aicargo-dialog"}));
        </script>
      </binding>
    </button>
  </group>

  <group>
    <layout>hbox</layout>
    <valign>top</valign>
    <halign>fill</halign>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>AI Object:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/ai-path</property>
        <format>%s</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Latitude:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_lat</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
      <halign>left</halign>
      <label>Longitude:</label>
      <enable>
        <not>
          <property>/sim/rendering/rembrandt/enabled</property>
        </not>
      </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_lon</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Altitude:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_alt</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
    <group>
      <layout>vbox</layout>
      <text>
        <halign>left</halign>
        <label>Heading:</label>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
      </text>
      <text>
        <halign>left</halign>
        <property>/sim/gui/dialogs/aicargo-dialog/selected_cargo_head</property>
        <format>%f</format>
        <live>true</live>
        <color>
          <red>0.9</red>
          <green>0.4</green>
          <blue>0.2</blue>
          <alpha>1</alpha>
        </color>
      </text>
    </group>
  </group>

  <hrule/>

  <!-- Button bar -->
  <group>
    <layout>hbox</layout>
    <empty>
      <stretch>true</stretch>
    </empty>
    <button>
      <legend>Close</legend>
      <binding>
        <command>dialog-close</command>
      </binding>
    </button>
    <empty>
      <stretch>true</stretch>
    </empty>
  </group>  
</PropertyList>
